/********************************************************************
 *
 * SoutheastCon 2017 Arena control - Stage1.cpp
 *
 * This is the relay control table used to select the resistor (R)), 
 *    capacitor (C)), inductor (I)), diode (D and d - two orientations)
 *    and wire (W) pattern used in stage 1.
 * This does not allow all possible combinations), but is a reasonable
 *    enough size tree of values (106 combinations) that it is not 
 *    possible to guess), and uses only 16 relays (as compared to 25 
 *    for a simplistic approach that allows all combinations).
 *
 * This table was computer generated - do not hand edit!!
 ********************************************************************/

/* The Arduino bit constant type only allows up to an 8 bit maximum
 *    field size, so this allows using the bit constant to define
 *    all sixteen bits
 */
#define SIXTEEN_BITS(high,low) ((high << 8) | low)

#define RELAY_TABLE_LENGTH (sizeof(relayTable) / sizeof(relayTable[0]))

uint16_t relayTable[] = {
     SIXTEEN_BITS(B00001010, B11100010), // DIRCW - #0
     SIXTEEN_BITS(B10001010, B11100010), // dIRCW - #1
     SIXTEEN_BITS(B01010000, B11100010), // DIRWC - #2
     SIXTEEN_BITS(B11010000, B11100010), // dIRWC - #3
     SIXTEEN_BITS(B00111010, B00100010), // DIWCR - #4
     SIXTEEN_BITS(B10111010, B00100010), // dIWCR - #5
     SIXTEEN_BITS(B00001010, B00011010), // DRICW - #6
     SIXTEEN_BITS(B10001010, B00011010), // dRICW - #7
     SIXTEEN_BITS(B01010000, B00011010), // DRIWC - #8
     SIXTEEN_BITS(B11010000, B00011010), // dRIWC - #9
     SIXTEEN_BITS(B01011000, B00011010), // DCIWR - #10
     SIXTEEN_BITS(B11011000, B00011010), // dCIWR - #11
     SIXTEEN_BITS(B00110000, B00000010), // DRWIC - #12
     SIXTEEN_BITS(B10110000, B00000010), // dRWIC - #13
     SIXTEEN_BITS(B00001000, B11000010), // DCRIW - #14
     SIXTEEN_BITS(B10001000, B11000010), // dCRIW - #15
     SIXTEEN_BITS(B00111000, B00000010), // DCWIR - #16
     SIXTEEN_BITS(B10111000, B00000010), // dCWIR - #17
     SIXTEEN_BITS(B00001010, B11010100), // IDRCW - #18
     SIXTEEN_BITS(B10001010, B11010100), // IdRCW - #19
     SIXTEEN_BITS(B01010000, B11010100), // IDRWC - #20
     SIXTEEN_BITS(B11010000, B11010100), // IdRWC - #21
     SIXTEEN_BITS(B00111010, B00010100), // IDWCR - #22
     SIXTEEN_BITS(B10111010, B00010100), // IdWCR - #23
     SIXTEEN_BITS(B00001010, B10011100), // RDICW - #24
     SIXTEEN_BITS(B10001010, B10011100), // RdICW - #25
     SIXTEEN_BITS(B01010000, B10011100), // RDIWC - #26
     SIXTEEN_BITS(B11010000, B10011100), // RdIWC - #27
     SIXTEEN_BITS(B01010100, B00011100), // CDIWR - #28
     SIXTEEN_BITS(B11010100, B00011100), // CdIWR - #29
     SIXTEEN_BITS(B00001010, B00011100), // WDICR - #30
     SIXTEEN_BITS(B10001010, B00011100), // WdICR - #31
     SIXTEEN_BITS(B00110000, B10000100), // RDWIC - #32
     SIXTEEN_BITS(B10110000, B10000100), // RdWIC - #33
     SIXTEEN_BITS(B00000100, B11000100), // CDRIW - #34
     SIXTEEN_BITS(B10000100, B11000100), // CdRIW - #35
     SIXTEEN_BITS(B00000000, B11000100), // WDRIC - #36
     SIXTEEN_BITS(B10000000, B11000100), // WdRIC - #37
     SIXTEEN_BITS(B00110100, B00000100), // CDWIR - #38
     SIXTEEN_BITS(B10110100, B00000100), // CdWIR - #39
     SIXTEEN_BITS(B00001010, B00010011), // IRDCW - #40
     SIXTEEN_BITS(B10001010, B00010011), // IRdCW - #41
     SIXTEEN_BITS(B01010000, B00010011), // IRDWC - #42
     SIXTEEN_BITS(B11010000, B00010011), // IRdWC - #43
     SIXTEEN_BITS(B01011000, B00010011), // ICDWR - #44
     SIXTEEN_BITS(B11011000, B00010011), // ICdWR - #45
     SIXTEEN_BITS(B00001010, B10100011), // RIDCW - #46
     SIXTEEN_BITS(B10001010, B10100011), // RIdCW - #47
     SIXTEEN_BITS(B01010000, B10100011), // RIDWC - #48
     SIXTEEN_BITS(B11010000, B10100011), // RIdWC - #49
     SIXTEEN_BITS(B01010100, B00100011), // CIDWR - #50
     SIXTEEN_BITS(B11010100, B00100011), // CIdWR - #51
     SIXTEEN_BITS(B00001010, B00100011), // WIDCR - #52
     SIXTEEN_BITS(B10001010, B00100011), // WIdCR - #53
     SIXTEEN_BITS(B00001000, B10000011), // RCDIW - #54
     SIXTEEN_BITS(B10001000, B10000011), // RCdIW - #55
     SIXTEEN_BITS(B00000100, B00000011), // CRDIW - #56
     SIXTEEN_BITS(B10000100, B00000011), // CRdIW - #57
     SIXTEEN_BITS(B00000000, B00000011), // WRDIC - #58
     SIXTEEN_BITS(B10000000, B00000011), // WRdIC - #59
     SIXTEEN_BITS(B00001000, B00000011), // WCDIR - #60
     SIXTEEN_BITS(B10001000, B00000011), // WCdIR - #61
     SIXTEEN_BITS(B00110000, B00010101), // IRWDC - #62
     SIXTEEN_BITS(B10110000, B00010101), // IRWdC - #63
     SIXTEEN_BITS(B00001000, B11010101), // ICRDW - #64
     SIXTEEN_BITS(B10001000, B11010101), // ICRdW - #65
     SIXTEEN_BITS(B00111000, B00010101), // ICWDR - #66
     SIXTEEN_BITS(B10111000, B00010101), // ICWdR - #67
     SIXTEEN_BITS(B00110000, B10100101), // RIWDC - #68
     SIXTEEN_BITS(B10110000, B10100101), // RIWdC - #69
     SIXTEEN_BITS(B00000100, B11100101), // CIRDW - #70
     SIXTEEN_BITS(B10000100, B11100101), // CIRdW - #71
     SIXTEEN_BITS(B00000000, B11100101), // WIRDC - #72
     SIXTEEN_BITS(B10000000, B11100101), // WIRdC - #73
     SIXTEEN_BITS(B00110100, B00100101), // CIWDR - #74
     SIXTEEN_BITS(B10110100, B00100101), // CIWdR - #75
     SIXTEEN_BITS(B00001000, B10011101), // RCIDW - #76
     SIXTEEN_BITS(B10001000, B10011101), // RCIdW - #77
     SIXTEEN_BITS(B00000100, B00011101), // CRIDW - #78
     SIXTEEN_BITS(B10000100, B00011101), // CRIdW - #79
     SIXTEEN_BITS(B00000000, B00011101), // WRIDC - #80
     SIXTEEN_BITS(B10000000, B00011101), // WRIdC - #81
     SIXTEEN_BITS(B00001000, B00011101), // WCIDR - #82
     SIXTEEN_BITS(B10001000, B00011101), // WCIdR - #83
     SIXTEEN_BITS(B00111010, B00010000), // IRWCD - #84
     SIXTEEN_BITS(B10111010, B00010000), // IRWCd - #85
     SIXTEEN_BITS(B01011000, B11010000), // ICRWD - #86
     SIXTEEN_BITS(B11011000, B11010000), // ICRWd - #87
     SIXTEEN_BITS(B00111010, B10100000), // RIWCD - #88
     SIXTEEN_BITS(B10111010, B10100000), // RIWCd - #89
     SIXTEEN_BITS(B01010100, B11100000), // CIRWD - #90
     SIXTEEN_BITS(B11010100, B11100000), // CIRWd - #91
     SIXTEEN_BITS(B00001010, B11100000), // WIRCD - #92
     SIXTEEN_BITS(B10001010, B11100000), // WIRCd - #93
     SIXTEEN_BITS(B01011000, B10011000), // RCIWD - #94
     SIXTEEN_BITS(B11011000, B10011000), // RCIWd - #95
     SIXTEEN_BITS(B01010100, B00011000), // CRIWD - #96
     SIXTEEN_BITS(B11010100, B00011000), // CRIWd - #97
     SIXTEEN_BITS(B00001010, B00011000), // WRICD - #98
     SIXTEEN_BITS(B10001010, B00011000), // WRICd - #99
     SIXTEEN_BITS(B00111000, B10000000), // RCWID - #100
     SIXTEEN_BITS(B10111000, B10000000), // RCWId - #101
     SIXTEEN_BITS(B00110100, B00000000), // CRWID - #102
     SIXTEEN_BITS(B10110100, B00000000), // CRWId - #103
     SIXTEEN_BITS(B00001000, B11000000), // WCRID - #104
     SIXTEEN_BITS(B10001000, B11000000)  // WCRId - #105
};

